#!/usr/bin/env python3
# Author: Jan Larres <jan@majutsushi.net>
# License: MIT/X11

import os
import sys
import unicodedata
from subprocess import CalledProcessError, run

UNICODE_END = 0xE01EF


def main() -> int:
    chars = [
        c + "\t" + name
        for c, name in (
            (c, unicodedata.name(c, None)) for c in map(chr, range(UNICODE_END))
        )
        if name is not None
    ]
    stdin = "\n".join(chars)

    try:
        if os.environ.get("XDG_SESSION_TYPE") == "wayland":
            cmd = ["fuzzel", "--dmenu"]
        else:
            cmd = ["rofi", "-dmenu", "-i"]
        p = run(
            cmd,
            input=stdin,
            text=True,
            check=True,
            capture_output=True,
        )
    except CalledProcessError:
        return 1

    selected = p.stdout.splitlines()[0].split("\t")[0]
    try:
        p = run(
            ["cb"],
            input=selected,
            text=True,
            check=True,
        )
    except Exception as e:
        run(["zenity", "--error", f"--text={e}"], check=True)
        raise

    return 0


if __name__ == "__main__":
    sys.exit(main())
